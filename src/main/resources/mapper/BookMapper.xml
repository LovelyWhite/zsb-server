<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.maixedu.zsb.dao.BookMapper">
  <resultMap id="BaseResultMap" type="cn.maixedu.zsb.model.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bookkindid" jdbcType="INTEGER" property="bookkindid" />
    <result column="priceid" jdbcType="INTEGER" property="priceid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="press" jdbcType="VARCHAR" property="press" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="poster" jdbcType="VARCHAR" property="poster" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bookkindid, priceid, name, press, ISBN, poster
  </sql>
  <select id="selectByExample" parameterType="cn.maixedu.zsb.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.maixedu.zsb.model.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.maixedu.zsb.model.Book">
    insert into book (id, bookkindid, priceid, 
      name, press, ISBN, 
      poster)
    values (#{id,jdbcType=INTEGER}, #{bookkindid,jdbcType=INTEGER}, #{priceid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{press,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, 
      #{poster,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.maixedu.zsb.model.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookkindid != null">
        bookkindid,
      </if>
      <if test="priceid != null">
        priceid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="press != null">
        press,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="poster != null">
        poster,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookkindid != null">
        #{bookkindid,jdbcType=INTEGER},
      </if>
      <if test="priceid != null">
        #{priceid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="poster != null">
        #{poster,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.maixedu.zsb.model.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookkindid != null">
        bookkindid = #{record.bookkindid,jdbcType=INTEGER},
      </if>
      <if test="record.priceid != null">
        priceid = #{record.priceid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.press != null">
        press = #{record.press,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.poster != null">
        poster = #{record.poster,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      bookkindid = #{record.bookkindid,jdbcType=INTEGER},
      priceid = #{record.priceid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      press = #{record.press,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      poster = #{record.poster,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.maixedu.zsb.model.Book">
    update book
    <set>
      <if test="bookkindid != null">
        bookkindid = #{bookkindid,jdbcType=INTEGER},
      </if>
      <if test="priceid != null">
        priceid = #{priceid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="poster != null">
        poster = #{poster,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.maixedu.zsb.model.Book">
    update book
    set bookkindid = #{bookkindid,jdbcType=INTEGER},
      priceid = #{priceid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      poster = #{poster,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>